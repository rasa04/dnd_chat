x-server:
  &x-server
    build:
      context: .
      dockerfile: ./_docker/server/Dockerfile
    depends_on:
      - dnd_database
    volumes:
      - ./server/app:${SERVER_WORKDIR}/app
      - ./server/config:${SERVER_WORKDIR}/config
      - ./server/routes:${SERVER_WORKDIR}/routes
      - ./server/database:${SERVER_WORKDIR}/database
      - ./server/test:${SERVER_WORKDIR}/test

services:
  dnd_database:
    container_name: dnd_database
    image: library/mysql:latest
    restart: always
    ports:
      - target: 3306
        published: 3307
        protocol: tcp
    env_file:
      - .env
  server:
    <<: *x-server
    restart: always
    container_name: dnd_server
  consumer:
    <<: *x-server
    container_name: worker_handle_messages
    restart: always
    command: [
      "php",
      "artisan",
      "app:handle-messages-worker"
    ]
  nginx:
    container_name: dnd_nginx
    image: nginx:latest
    restart: always
    volumes:
      - ./_docker/server/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - target: 80
        published: 81
        protocol: tcp
    depends_on:
      - server
  client:
    container_name: dnd_client
    restart: always
    build:
      context: .
      dockerfile: ./_docker/client/Dockerfile
      target: ${CLIENT_STAGE}
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
    depends_on:
      - nginx
    volumes:
      - ./client/src/components:${CLIENT_WORKDIR}/src/components
      - ./client/src/router:${CLIENT_WORKDIR}/src/router
      - ./client/src/stores:${CLIENT_WORKDIR}/src/stores
      - ./client/src/views:${CLIENT_WORKDIR}/src/views
  ws:
    container_name: dnd_ws
    restart: always
    build:
      context: .
      dockerfile: ./_docker/ws/Dockerfile
    ports:
      - target: 8081
        published: 8081
        protocol: tcp
    volumes:
      - ./ws:/var/www/ws
  queue:
    image: rabbitmq:3-management
    container_name: dnd_queue
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}

networks:
  server-tier:
    driver: bridge
